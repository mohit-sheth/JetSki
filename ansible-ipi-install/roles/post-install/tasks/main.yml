- block:
  - name: Label infra nodes
    shell: |
       oc label node '{{ infra_node_string_1 }}' 'role.kubernetes.io/infra=' --overwrite 

  - name: Label infra nodes
    shell: |
       oc label node '{{ infra_node_string_2 }}' 'role.kubernetes.io/infra=' --overwrite

  - name: Label workload nodes
    shell: |
       oc label node '{{ workload_node_string }}' 'role.kubernetes.io/workload=' --overwrite
  when: infra_node_string_1 != "" or infra_node_string_2 != "" or workload_node_string != ""

- name: OVN block
  block:
  - name: Scale CVO Down for OVNKubernetes image patching
    command: oc scale -n openshift-cluster-version deployment.apps/cluster-version-operator --replicas=0
  
  - name: Patch new OVNKubernetes Image
    command: oc -n openshift-network-operator set env deployment.apps/network-operator OVN_IMAGE={{openshift_ovn_image}} RELEASE_VERSION="5.0.0"
  
  - name: Pause the rollout to begin
    pause:
      seconds: 10
  
  - name: Wait for OVNK new node images to roll out
    command: oc rollout status -n {{ ovn_namespace }} ds/ovnkube-node
  
  - name: Wait for OVNK new master images to roll out
    command: oc rollout status -n {{ ovn_namespace }} ds/ovnkube-master
  
  - name: OVN SBDB block
    block:
    - name: Deploy ovnkube-sbdb-relay
      script: sbdb-relay.sh deploy
    
    - name: Wait for OVNK sbdb-relay images to roll out
      command: oc rollout status -n {{ ovn_namespace }} deployment.apps/ovnkube-sbdb-relay
    
    - name: Verify ovnkube-sbdb-relay connectivity
      script: sbdb-relay.sh verify
    when: openshift_toggle_ovn_relay|bool
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  when: openshift_toggle_ovn_patch|bool


- name: Relabel the infra nodes
  shell: |
    oc label nodes --overwrite -l 'node-role.kubernetes.io/infra=' node-role.kubernetes.io/worker-
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  when: openshift_toggle_infra_node|bool

- name: Relabel the workload node
  shell: |
    oc label nodes --overwrite -l 'node-role.kubernetes.io/workload=' node-role.kubernetes.io/worker-
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  when: openshift_toggle_workload_node|bool

- name: Add additional label to worker nodes to provide ablity to isolate workloads on workers
  shell: |
    oc label nodes --overwrite -l 'node-role.kubernetes.io/worker=' computenode=true
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"

- name: Taint the workload node
  shell: |
    oc adm taint node -l node-role.kubernetes.io/workload= role=workload:NoSchedule --overwrite=true
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  when: openshift_toggle_workload_node|bool

- name: Copy new cluster-monitoring-config
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    name: openshift-windows-machine-config-operator
    template: cluster-monitoring-config.yml.j2
  when: openshift_toggle_infra_node|bool

- name: Apply new nodeSelector to infra workload components
  shell: |
    oc patch {{item.object}} {{item.type|default('',True)}} -n {{item.namespace}} -p {{item.patch}}
  with_items:
    - namespace: openshift-ingress-operator
      object: ingresscontrollers/default
      patch: |
        '{"spec": {"nodePlacement": {"nodeSelector": {"matchLabels": {"node-role.kubernetes.io/infra": ""}}}}}'
      type: "--type merge"

    - namespace: openshift-image-registry
      object: deployment.apps/image-registry
      patch: |
         '{"spec": {"template": {"spec": {"nodeSelector": {"node-role.kubernetes.io/infra": ""}}}}}'
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  when: openshift_toggle_infra_node|bool


- name: Deploy dittybopper
  include_tasks: 70_deploy_dittybopper.yml
  when: dittybopper_enable